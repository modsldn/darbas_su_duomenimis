

1. Sukurkime duomenų bazę 'Auto_garazas' ir pradinę duomenų lentelę 'automobiliai':

create table automobiliai (
marke varchar(100),
modelis varchar(100),
kuro_tipas enum('Dyzelinas', 'Benzinas', 'Dujos', 'Elektra'),
kebulas enum('SUV', 'sedanas', 'universalas', 'hecbekas', 'kabrioletas'),
gamybos_metai year,
transmisija enum('mechanine', 'automatine'),
duru_skaicius int,
galingumas int,
turis float(3,1),
rida int,
kaina int,
savikaina int,
pirkejas varchar(300),
pirkejo_adresas varchar(300),
pirkejo_telefonas varchar(12),
saugojimo_lokacija varchar(255),
pardavimo_data date
);


2. Pasiekime 1NF (1 normalizacijos formą)

1. auto_id
2. saugojimo lokacija -> saugojimo_miestas, saugojimo_gatve

ALTER TABLE automobiliai ADD COLUMN auto_id INT UNSIGNED PRIMARY KEY AUTO_INCREMENT
ALTER TABLE automobiliai CHANGE COLUMN saugojimo_lokacija saugojimo_miestas VARCHAR(50)
ALTER TABLE automobiliai ADD COLUMN saugojimo_adresas VARCHAR(100) AFTER saugojimo_miestas;

3. Pasiekime 2NF (2 normalizacijos formą)

    3.1. Pirkejas iskeliamas

create table pirkejas (
id int unsigned auto_increment primary key,
pirkejas varchar(255),
adresas varchar(255),
telefonas varchar(12)
)

alter table automobiliai drop pirkejas_id

alter table automobiliai add constraint FK_pirkejas_id foreign key (pirkejas_id) references pirkejas(id)

alter table automobiliai drop column pirkejas, drop column pirkejo_adresas, drop column pirkejo_telefonas

create table kuras(
kuras_id int unsigned primary key auto_increment,
kuro_tipas enum ('Dyzelinas', 'Benzinas', 'Dujos', 'Elektra')
);

alter table automobiliai drop column kuro_tipas
alter table automobiliai add column kuras_id int unsigned
alter table automobiliai add foreign key (kuras_id) references kuras (kuras_id)

create table saugojimo_vieta(
saugojimo_id int unsigned primary key auto_increment,
saugojimo_miestas varchar (50),
saugojimo_adresas varchar (100)
);

alter table automobiliai drop column saugojimo_miestas, drop column saugojimo_adresas;
alter table automobiliai add column saugojimo_id int unsigned ;
alter table automobiliai add foreign key (saugojimo_id) references saugojimo_vieta (saugojimo_id);

4. Pasiekime 3NF (3 normalizacijos forma) + INSERT INTO

create table kebulas(
kebulas enum('SUV','Sedanas','Universalas','Kabrioletas','Hecbekas') primary key,
duru_skaicius int
);
alter table automobiliai drop column duru_skaicius;
alter table automobiliai add foreign key (kebulas) references kebulas(kebulas);
drop table if exists kebulas;
create table galingumas(
galingumas int primary key,
turis float(2,1)
);
alter table automobiliai drop column turis;
alter table automobiliai add foreign key (galingumas) references galingumas(galingumas);
insert into galingumas(
galingumas, turis
) values (
130, 2.7
)
insert into kebulas(
kebulas, duru_skaicius
) values (
"Universalas", 5
)
insert into kuras(
kuro_tipas
) values (
"Dyzelinas"
)
insert into pirkejas(
pirkejas, pirkejo_adresas, pirkejo_numeris
) values (
"Audrius Plonis", "Zolyno g. 47", +37062578945
)
insert into saugojimo_vieta(
saugojimo_miestas, saugojimo_adresas
) values (
"Vilnius", "Kestucio g. 13"
)
insert into automobiliai(
marke, modelis, galingumas, kebulas, gamybos_metai, transmisija, rida, kaina, savikaina, pardavimo_data, pirkejo_id, kuras_id, saugojimo_id
) values (
"Audi", "B7", 130, "Universalas", 2007, "Mechanine", 15798, 19800, 11300, "2021-11-01", 1, 1, 1
)